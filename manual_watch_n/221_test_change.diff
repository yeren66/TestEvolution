--- 
+++ 
@@ -29,7 +29,7 @@
 import org.apache.commons.math4.legacy.stat.correlation.StorelessCovariance;
 import org.apache.commons.math4.legacy.stat.descriptive.moment.VectorialCovariance;
 import org.apache.commons.math4.legacy.stat.descriptive.moment.VectorialMean;
-import org.apache.commons.math4.legacy.util.FastMath;
+import org.apache.commons.math4.legacy.core.jdkmath.AccurateMath;
 import org.junit.Test;
 import org.junit.Assert;
 
@@ -91,8 +91,8 @@
         for (int i = 0; i < 10; i++) {
             double[] generated = sg.get();
             for (int j = 0; j < generated.length; ++j) {
-                min[j] = FastMath.min(min[j], generated[j]);
-                max[j] = FastMath.max(max[j], generated[j]);
+                min[j] = AccurateMath.min(min[j], generated[j]);
+                max[j] = AccurateMath.max(max[j], generated[j]);
             }
         }
         for (int j = 0; j < min.length; ++j) {
@@ -130,7 +130,7 @@
             for (int j = 0; j <= i; ++j) {
                 Assert.assertEquals(covariance.getEntry(i, j),
                                     estimatedCovariance.getEntry(i, j),
-                                    0.1 * (1.0 + FastMath.abs(mean[i])) * (1.0 + FastMath.abs(mean[j])));
+                                    0.1 * (1.0 + AccurateMath.abs(mean[i])) * (1.0 + AccurateMath.abs(mean[j])));
             }
         }
 