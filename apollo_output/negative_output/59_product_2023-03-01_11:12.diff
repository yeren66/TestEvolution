645b215a29f36ff7921f0180d9477a8a15df88b4
apollo-configservice/src/main/java/com/ctrip/framework/apollo/configservice/util/NamespaceUtil.java
--- 
+++ 
@@ -1,57 +1,57 @@
 /*
- * Copyright 2022 Apollo Authors
+ * Copyright 2023 Apollo Authors
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  * http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 package com.ctrip.framework.apollo.configservice.util;
 
 import com.ctrip.framework.apollo.common.entity.AppNamespace;
 import com.ctrip.framework.apollo.configservice.service.AppNamespaceServiceWithCache;
 import org.springframework.stereotype.Component;
 
 /**
  * @author Jason Song(song_s@ctrip.com)
  */
 @Component
 public class NamespaceUtil {
 
   private final AppNamespaceServiceWithCache appNamespaceServiceWithCache;
 
   public NamespaceUtil(final AppNamespaceServiceWithCache appNamespaceServiceWithCache) {
     this.appNamespaceServiceWithCache = appNamespaceServiceWithCache;
   }
 
   public String filterNamespaceName(String namespaceName) {
     if (namespaceName.toLowerCase().endsWith(".properties")) {
       int dotIndex = namespaceName.lastIndexOf(".");
       return namespaceName.substring(0, dotIndex);
     }
 
     return namespaceName;
   }
 
   public String normalizeNamespace(String appId, String namespaceName) {
     AppNamespace appNamespace = appNamespaceServiceWithCache.findByAppIdAndNamespace(appId, namespaceName);
     if (appNamespace != null) {
       return appNamespace.getName();
     }
 
     appNamespace = appNamespaceServiceWithCache.findPublicNamespaceByName(namespaceName);
     if (appNamespace != null) {
       return appNamespace.getName();
     }
 
     return namespaceName;
   }
 }