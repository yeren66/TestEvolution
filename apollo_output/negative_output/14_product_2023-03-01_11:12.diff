645b215a29f36ff7921f0180d9477a8a15df88b4
apollo-adminservice/src/main/java/com/ctrip/framework/apollo/adminservice/controller/ItemSetController.java
--- 
+++ 
@@ -1,49 +1,49 @@
 /*
- * Copyright 2022 Apollo Authors
+ * Copyright 2023 Apollo Authors
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  * http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  */
 package com.ctrip.framework.apollo.adminservice.controller;
 
 import com.ctrip.framework.apollo.adminservice.aop.PreAcquireNamespaceLock;
 import com.ctrip.framework.apollo.biz.service.ItemSetService;
 import com.ctrip.framework.apollo.common.dto.ItemChangeSets;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.PathVariable;
 import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.RequestBody;
 import org.springframework.web.bind.annotation.RestController;
 
 @RestController
 public class ItemSetController {
 
   private final ItemSetService itemSetService;
 
   public ItemSetController(final ItemSetService itemSetService) {
     this.itemSetService = itemSetService;
   }
 
   @PreAcquireNamespaceLock
   @PostMapping("/apps/{appId}/clusters/{clusterName}/namespaces/{namespaceName}/itemset")
   public ResponseEntity<Void> create(@PathVariable String appId, @PathVariable String clusterName,
                                      @PathVariable String namespaceName, @RequestBody ItemChangeSets changeSet) {
 
     itemSetService.updateSet(appId, clusterName, namespaceName, changeSet);
 
     return ResponseEntity.status(HttpStatus.OK).build();
   }
 
 
 }