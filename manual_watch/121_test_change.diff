--- 
+++ 
@@ -1023,8 +1023,7 @@
     public void testLinearCombination2DSDS() {
         // we compare accurate versus naive dot product implementations
         // on regular vectors (i.e. not extreme cases like in the previous test)
-        UniformRandomProvider random = RandomSource.create(RandomSource.WELL_1024_A,
-                                                           0xc6af886975069f11L);
+        UniformRandomProvider random = RandomSource.WELL_1024_A.create(0xc6af886975069f11L);
 
         for (int i = 0; i < 10000; ++i) {
             final SparseGradient[] u = new SparseGradient[4];
@@ -1068,8 +1067,7 @@
     public void testLinearCombination2DoubleDS() {
         // we compare accurate versus naive dot product implementations
         // on regular vectors (i.e. not extreme cases like in the previous test)
-        UniformRandomProvider random = RandomSource.create(RandomSource.WELL_1024_A,
-                                                           0xc6af886975069f11L);
+        UniformRandomProvider random = RandomSource.WELL_1024_A.create(0xc6af886975069f11L);
 
         for (int i = 0; i < 10000; ++i) {
             final double[] u = new double[4];