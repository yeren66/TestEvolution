--- 
+++ 
@@ -36,7 +36,7 @@
 import org.apache.commons.math4.legacy.stat.descriptive.StorelessUnivariateStatisticAbstractTest;
 import org.apache.commons.math4.legacy.stat.descriptive.UnivariateStatistic;
 import org.apache.commons.math4.legacy.stat.descriptive.rank.PSquarePercentile.PSquareMarkers;
-import org.apache.commons.math4.legacy.core.jdkmath.AccurateMath;
+import org.apache.commons.math4.core.jdkmath.JdkMath;
 import org.junit.Assert;
 import org.junit.Test;
 
@@ -74,7 +74,7 @@
         StorelessUnivariateStatistic replica = null;
 
         // select a portion of testArray till 75 % of the length to load first
-        long index = AccurateMath.round(0.75 * testArray.length);
+        long index = JdkMath.round(0.75 * testArray.length);
 
         // Put first half in master and copy master to replica
         master.incrementAll(testArray, 0, (int) index);
@@ -108,7 +108,7 @@
 
         // select a portion of testArray which is 10% of the length to load
         // first
-        long index = AccurateMath.round(0.1 * testArray.length);
+        long index = JdkMath.round(0.1 * testArray.length);
 
         // Put first half in master and copy master to replica
         master.incrementAll(testArray, 0, (int) index);
@@ -543,8 +543,8 @@
         if (Double.isNaN(a)) {
             Assert.assertTrue("" + b + " is not NaN.", Double.isNaN(a));
         } else {
-            double max = AccurateMath.max(a, b);
-            double percentage = AccurateMath.abs(a - b) / max;
+            double max = JdkMath.max(a, b);
+            double percentage = JdkMath.abs(a - b) / max;
             double deviation = delta;
             Assert.assertTrue(String.format(
                     "Deviated = %f and is beyond %f as a=%f,  b=%f",