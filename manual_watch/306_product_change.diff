--- 
+++ 
@@ -54,65 +54,4 @@
         final double p = FastMath.abs(period);
         return a - p * FastMath.floor((a - offset) / p) - offset;
     }
-
-    /**
-     * Check that the argument is a real number.
-     *
-     * @param x Argument.
-     * @throws NotFiniteNumberException if {@code x} is not a
-     * finite real number.
-     */
-    public static void checkFinite(final double x)
-        throws NotFiniteNumberException {
-        if (Double.isInfinite(x) || Double.isNaN(x)) {
-            throw new NotFiniteNumberException(x);
-        }
-    }
-
-    /**
-     * Check that all the elements are real numbers.
-     *
-     * @param val Arguments.
-     * @throws NotFiniteNumberException if any values of the array is not a
-     * finite real number.
-     */
-    public static void checkFinite(final double[] val)
-        throws NotFiniteNumberException {
-        for (int i = 0; i < val.length; i++) {
-            final double x = val[i];
-            if (Double.isInfinite(x) || Double.isNaN(x)) {
-                throw new NotFiniteNumberException(LocalizedFormats.ARRAY_ELEMENT, x, i);
-            }
-        }
-    }
-
-    /**
-     * Checks that an object is not null.
-     *
-     * @param o Object to be checked.
-     * @param pattern Message pattern.
-     * @param args Arguments to replace the placeholders in {@code pattern}.
-     * @throws NullArgumentException if {@code o} is {@code null}.
-     */
-    public static void checkNotNull(Object o,
-                                    Localizable pattern,
-                                    Object ... args)
-        throws NullArgumentException {
-        if (o == null) {
-            throw new NullArgumentException(pattern, args);
-        }
-    }
-
-    /**
-     * Checks that an object is not null.
-     *
-     * @param o Object to be checked.
-     * @throws NullArgumentException if {@code o} is {@code null}.
-     */
-    public static void checkNotNull(Object o)
-        throws NullArgumentException {
-        if (o == null) {
-            throw new NullArgumentException();
-        }
-    }
 }