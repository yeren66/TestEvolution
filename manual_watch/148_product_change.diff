--- 
+++ 
@@ -357,14 +357,14 @@
                 }
 
                 // Now pv != 0, calculate the new approximation.
-                final Complex G = dv.divide(pv);
-                final Complex G2 = G.multiply(G);
-                final Complex H = G2.subtract(d2v.divide(pv));
-                final Complex delta = n1C.multiply((nC.multiply(H)).subtract(G2));
+                final Complex g = dv.divide(pv);
+                final Complex g2 = g.multiply(g);
+                final Complex h = g2.subtract(d2v.divide(pv));
+                final Complex delta = n1C.multiply((nC.multiply(h)).subtract(g2));
                 // Choose a denominator larger in magnitude.
                 final Complex deltaSqrt = delta.sqrt();
-                final Complex dplus = G.add(deltaSqrt);
-                final Complex dminus = G.subtract(deltaSqrt);
+                final Complex dplus = g.add(deltaSqrt);
+                final Complex dminus = g.subtract(deltaSqrt);
                 final Complex denominator = dplus.abs() > dminus.abs() ? dplus : dminus;
                 // Perturb z if denominator is zero, for instance,
                 // p(x) = x^3 + 1, z = 0.