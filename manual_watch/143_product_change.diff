--- 
+++ 
@@ -39,7 +39,7 @@
     private static final int NUM_COEFF = 16;
     /**
      * Matrix to compute the spline coefficients from the function values
-     * and function derivatives values
+     * and function derivatives values.
      */
     private static final double[][] AINV = {
         { 1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 },
@@ -60,11 +60,11 @@
         { 4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1 }
     };
 
-    /** Samples x-coordinates */
+    /** Samples x-coordinates. */
     private final double[] xval;
-    /** Samples y-coordinates */
+    /** Samples y-coordinates. */
     private final double[] yval;
-    /** Set of cubic splines patching the whole data grid */
+    /** Set of cubic splines patching the whole data grid. */
     private final BicubicFunction[][] splines;
 
     /**
@@ -175,14 +175,10 @@
      * @return {@code true} if (x, y) is a valid point.
      */
     public boolean isValidPoint(double x, double y) {
-        if (x < xval[0] ||
+        return !(x < xval[0] ||
             x > xval[xval.length - 1] ||
             y < yval[0] ||
-            y > yval[yval.length - 1]) {
-            return false;
-        } else {
-            return true;
-        }
+            y > yval[yval.length - 1]);
     }
 
     /**
@@ -268,7 +264,7 @@
 class BicubicFunction implements BivariateFunction {
     /** Number of points. */
     private static final short N = 4;
-    /** Coefficients */
+    /** Coefficients. */
     private final double[][] a;
 
     /**